[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"resolutions.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// imports/api/resolutions.js                                        //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({\n  Resolutions: () => Resolutions\n});\nconst Resolutions = new Mongo.Collection(\"resolution\");\n///////////////////////////////////////////////////////////////////////\n\n}}},\"server\":{\"methods.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/methods.js                                                 //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Resolutions;\nmodule.link(\"../imports/api/resolutions\", {\n  Resolutions(v) {\n    Resolutions = v;\n  }\n\n}, 2);\n// var mysql=require('mysql');\n// var express = require('express');\nMeteor.startup(() => {});\nMeteor.methods({\n  'data'() {},\n\n  'addtext'(text) {\n    console.log(\"meteor\");\n    Resolutions.insert({\n      name: text,\n      done: false\n    });\n    return text;\n  }\n\n});\n///////////////////////////////////////////////////////////////////////\n\n},\"main.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nmodule.link(\"./methods\");\nlet Resolutions;\nmodule.link(\"../imports/api/resolutions\", {\n  Resolutions(v) {\n    Resolutions = v;\n  }\n\n}, 1);\nMeteor.startup(() => {});\n///////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","hash":"adb28e8b59570545a61c7481f422b8f175f8879e","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/resolutions.js","server/methods.js","server/main.js"],"names":["module","export","Resolutions","Mongo","Collection","Meteor","link","v","startup","methods","text","console","log","insert","name","done"],"mappings":";;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,aAAW,EAAC,MAAIA;AAAjB,CAAd;AAAO,MAAMA,WAAW,GAAC,IAAIC,KAAK,CAACC,UAAV,CAAqB,YAArB,CAAlB,C;;;;;;;;;;;ACAP,IAAIC,MAAJ;AAAWL,MAAM,CAACM,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqD,IAAIJ,KAAJ;AAAUH,MAAM,CAACM,IAAP,CAAY,cAAZ,EAA2B;AAACH,OAAK,CAACI,CAAD,EAAG;AAACJ,SAAK,GAACI,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAAkD,IAAIL,WAAJ;AAAgBF,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAAyC;AAACJ,aAAW,CAACK,CAAD,EAAG;AAACL,eAAW,GAACK,CAAZ;AAAc;;AAA9B,CAAzC,EAAyE,CAAzE;AAG5I;AACA;AAGAF,MAAM,CAACG,OAAP,CAAe,MAAM,CAEpB,CAFD;AAMAH,MAAM,CAACI,OAAP,CAAe;AACb,WAAQ,CAEP,CAHY;;AAKb,YAAUC,IAAV,EAAgB;AAEdC,WAAO,CAACC,GAAR,CAAY,QAAZ;AACAV,eAAW,CAACW,MAAZ,CAAmB;AAACC,UAAI,EAACJ,IAAN;AAAWK,UAAI,EAAC;AAAhB,KAAnB;AACA,WAAOL,IAAP;AACD;;AAVY,CAAf,E;;;;;;;;;;;ACbA,IAAIL,MAAJ;AAAWL,MAAM,CAACM,IAAP,CAAY,eAAZ,EAA4B;AAACD,QAAM,CAACE,CAAD,EAAG;AAACF,UAAM,GAACE,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;AAAqDP,MAAM,CAACM,IAAP,CAAY,WAAZ;AAAyB,IAAIJ,WAAJ;AAAgBF,MAAM,CAACM,IAAP,CAAY,4BAAZ,EAAyC;AAACJ,aAAW,CAACK,CAAD,EAAG;AAACL,eAAW,GAACK,CAAZ;AAAc;;AAA9B,CAAzC,EAAyE,CAAzE;AAGzGF,MAAM,CAACG,OAAP,CAAe,MAAM,CAGpB,CAHD,E","file":"/app.js","sourcesContent":["export const Resolutions=new Mongo.Collection(\"resolution\");\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport {Resolutions} from '../imports/api/resolutions';\n// var mysql=require('mysql');\n// var express = require('express');\n\n\nMeteor.startup(() => {\n  \n});\n\n\n\nMeteor.methods({\n  'data'(){\n\n  },\n\n  'addtext'(text) {\n   \n    console.log(\"meteor\");\n    Resolutions.insert({name:text,done:false});\n    return text;\n  }\n}) ","import { Meteor } from 'meteor/meteor';\nimport './methods';\nimport {Resolutions} from '../imports/api/resolutions';\nMeteor.startup(() => {\n   \n\n});\n\n"]}}]